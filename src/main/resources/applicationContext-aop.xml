<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:s="http://www.springframework.org/schema/security"
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/security 
    http://www.springframework.org/schema/security/spring-security.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">


    <context:component-scan base-package="com.edu">
        <!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />-->
    </context:component-scan>
    <aop:aspectj-autoproxy proxy-target-class="true"/>


	
	
<!-- 	<aop:config proxy-target-class="true">
        <aop:aspect ref="serviceAspect">
            <aop:pointcut
                expression="execution(* com.ysh.ysh.action.RegisterAction.register(..))"
                id="registermethod" />
            <aop:before pointcut-ref="registermethod" method="before" />
        </aop:aspect>
    </aop:config> -->
	
	
	<!--下面的代码可以注释，因为
	在 PasswordEncodeAspect类定义文件中用@Service("passwordEncodeAspect")声明bean，
	用@Resource（name="passwordEncoder"）注入属性依赖 -->
	
<!-- 	<bean id="passwordEncoderAspect" class="com.ysh.ysh.business.system.aop.PasswordEncodeAspect">
        <property name="encoder" ref="passwordEncoder"/>
    </bean> -->
    
    
<!--     <aop:config proxy-target-class="true">
        <aop:aspect ref="passwordEncoderAspect">
            <aop:pointcut
                expression="execution(* com.ysh.ysh.action.RegisterAction.encodePassword(..))"
                id="encodePwdMethod" />
            <aop:around pointcut-ref="encodePwdMethod" method="encodePassword" />
        </aop:aspect>
    </aop:config> -->
    
   <!--  <tx:advice id="transactionAdvice"  
        transaction-manager="transactionManager">   
        <tx:attributes>   
            <tx:method name="save*" propagation="REQUIRED" />  
            <tx:method name="register*" propagation="REQUIRED" />   
            <tx:method name="update*" propagation="REQUIRED" />   
            <tx:method name="delete*" propagation="REQUIRED" />   
            <tx:method name="find*" propagation="NOT_SUPPORTED"/>   
            <tx:method name="get*" propagation="NOT_SUPPORTED"/>   
        </tx:attributes>   
    </tx:advice>   
    <aop:config>         
        <aop:pointcut id="tranPointCut"  
            expression="execution(* ysh.ysh.businiess.system..*.*(..))"/>          
        <aop:advisor advice-ref="transactionAdvice"  
            pointcut-ref="tranPointCut" />   
    </aop:config> -->
    
	<!-- <bean id="serviceAspect" class="com.ysh.ysh.business.system.aop.ServiceAspect"/>
	<aop:aspectj-autoproxy proxy-target-class="true"/>   
	   <aop:config>
		 声明一个切面,并注入切面Bean,相当于@Aspect
	<aop:aspect id="simpleAspect" ref="serviceAspect">
		配置一个切入点,相当于@Pointcut
		<aop:pointcut expression="execution(* business.system.impl..*(..))" id="simplePointcut"/>
		配置通知,相当于@Before、@After、@AfterReturn、@Around、@AfterThrowing
			<aop:before pointcut-ref="simplePointcut" method="before"/>
			<aop:after pointcut-ref="simplePointcut" method="after"/>
			<aop:after-returning pointcut-ref="simplePointcut" method="afterReturn"/>
			<aop:after-throwing pointcut-ref="simplePointcut" method="afterThrow" throwing="ex"/>
		</aop:aspect>
	</aop:config> -->
	
</beans>